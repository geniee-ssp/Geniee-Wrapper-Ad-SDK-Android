apply plugin: 'com.android.library'



android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compileOnly fileTree(dir: "libs", include: ["*.jar"])
    compileOnly 'androidx.appcompat:appcompat:1.2.0'
}


apply plugin: 'maven'


//To create an aar file in the repository,execute `./gradlew clean build uploadArchives` task.
def repo = new File(rootDir, '../repository')
def GNWrapperAdSDKPackageName = 'jp.co.geniee.gnwrapperadsdk'
def GNWrapperAdSDKName = 'GNWrapperAdSDK'
def GNWrapperAdSDKLibVersion = '1.0.0'

//def samplePj_path = System.getenv()['GN_ANDROID_SAMPLE_PROJECT_PATH']
//def repository_path = "/repository"
//def repository_path = "./repository"
def build_path = "build/intermediates/aar_main_jar/release/"
//def SDK_jar_version_file = "${samplePj_path}/Shells/${GNWrapperAdSDKName}-Jar-Name"

//def sample_path = "${samplePj_path}/sample/UseLocalLibrary"
//def release_SDK_path = "${samplePj_path}/GNWrapperAdSDK"
//def release_SDK_File_path= "${release_SDK_path}/${GNWrapperAdSDKName}-${GNWrapperAdSDKLibVersion}.jar"
def sample_lib_path = "app/libs"

uploadArchives {
    repositories {
        mavenDeployer {
            repository url: "file://${repo}"
            pom.version = GNWrapperAdSDKLibVersion
            pom.groupId = GNWrapperAdSDKPackageName
            pom.artifactId = GNWrapperAdSDKName
        }
    }
}
/*
task clearJar(type: Delete) {
    delete "${release_SDK_File_path}"
}
task makeJar(type: Copy) {
    from("${build_path}")
    into("${release_SDK_path}/")
    include('classes.jar')
    rename('classes.jar', "${GNWrapperAdSDKName}-${GNWrapperAdSDKLibVersion}.jar")

    doLast {
        file("${SDK_jar_version_file}").write("export ${GNWrapperAdSDKName}_JAR_NAME=${GNWrapperAdSDKName}-${GNWrapperAdSDKLibVersion}.jar", 'UTF-8')
    }
}
makeJar.dependsOn(clearJar, build)*/
